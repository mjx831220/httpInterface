<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 用户数据访问映射 -->
<mapper namespace="vfh.httpInterface.dao.account.UserDao" >

    <select id="get" resultType="hashmap">
          SELECT
            id AS "id",
            email AS "email",
            nickname AS "nickname",
            password AS "password",
            state AS "state",
            username AS "username"
          FROM
            tb_user
          WHERE
              id = #{id}
    </select>

    <select id="getByUsernameOrEmail" resultType="hashmap">
          SELECT
            id AS "id",
            email AS "email",
            nickname AS "nickname",
            password AS "password",
            state AS "state",
            username AS "username"
          FROM
            tb_user
          WHERE
            username = #{usernameOrEmail} OR email = #{usernameOrEmail}
    </select>

    <select id="find" resultType="hashmap">
        SELECT
          id AS "id",
          email AS "email",
          nickname AS "nickname",
          password AS "password",
          state AS "state",
          username AS "username"
        FROM
          tb_user
        WHERE
          state != 3
        <if test="filter.username != null and filter.username != ''">
            <bind name="filter.username" value=" '%' + filter.username + '%' " />
            AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
            <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
            AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
            AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
            <bind name="filter.email" value=" '%' + filter.email + '%' " />
            AND email LIKE #{filter.email}
        </if>
        ORDER BY id DESC
        <if test="filter.first != null and filter.last != null">
            LIMIT #{filter.first},#{filter.last}
        </if>
    </select>

    <select id="count" resultType="long">
        SELECT
          COUNT(id)
        FROM
          tb_user
        WHERE
          state != 3
        <if test="filter.username != null and filter.username != ''">
          <bind name="filter.username" value=" '%' + filter.username + '%' " />
          AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
          <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
          AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
          AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
          <bind name="filter.email" value=" '%' + filter.email + '%' " />
          AND email LIKE #{filter.email}
        </if>
    </select>

    <delete id="delete">
        DELETE FROM tb_user WHERE id = #{id}
    </delete>

    <delete id="deleteGroupAssociation">
        DELETE FROM tb_group_user WHERE fk_user_id = #{id}
    </delete>

    <update id="update">
        <trim prefix="SET" suffixOverrides="," />
        UPDATE
          tb_user
        SET
          email=#{entity.email},
          nickname=#{entity.nickname},
          state=#{entity.state}
        WHERE
          id = #{entity.id}
    </update>

    <update id="updatePassword">
        UPDATE
          tb_user
        SET
          password = #{password}
        WHERE
          id = #{id}
    </update>

    <insert id="insert" useGeneratedKeys="true" keyProperty="entity.id">
        INSERT INTO tb_user(
          email,
          password,
          nickname,
          state,
          username
        ) VALUES (
          #{entity.email},
          #{entity.password},
          #{entity.nickname},
          #{entity.state},
          #{entity.username}
        )
    </insert>

    <insert id="insertGroupAssociation">
        INSERT INTO
          tb_group_user(fk_user_id,fk_group_id)
        VALUES
        <foreach collection="groupIds" item="groupId" index="index" separator="," >
            (#{id}, #{groupId})
        </foreach>
    </insert>

</mapper>