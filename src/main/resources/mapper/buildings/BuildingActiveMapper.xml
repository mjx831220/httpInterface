<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vfh.httpInterface.dao.buildings.BuildingActiveMapper" >
  <sql id="Base_Column_List" >
    id, active_name, active_type, start_date, end_date, create_time, update_time, active_price,active_detail
  </sql>
  <select id="get" resultType="hashmap">
        SELECT 
          <include refid="Base_Column_List" />
        FROM
          tb_building_active
        WHERE 
          id = #{id}
   </select>
   <delete id="delete" >
    delete from tb_building_active
    where id = #{id}
  </delete>
   <insert id="insert" useGeneratedKeys="true" keyProperty="entity.id" >
    insert into tb_building_active ( active_name, active_type, start_date, start_date,
     create_time, active_price,active_detail
      )
    values ( #{entity.activeName}, #{entity.activeType}, 
      #{entity.startDate}, #{entity.startDate}, 
      now(), #{entity.activePrice}, #{entity.activeDetail}
      )
  </insert>
  <select id="count" resultType="long">
    select count(*) from tb_building_active
     WHERE
          id>0
        <if test="filter.username != null and filter.username != ''">
          <bind name="filter.username" value=" '%' + filter.username + '%' " />
          AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
          <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
          AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
          AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
          <bind name="filter.email" value=" '%' + filter.email + '%' " />
          AND email LIKE #{filter.email}
        </if>
  </select>
 <update id="update">
        UPDATE
          tb_buildings
        <set>
	      <if test="entity.activeName != null" >
       		active_name = #{entity.activeName},
	      </if>
	      <if test="entity.activeType != null" >
	        active_type = #{entity.activeType},
	      </if>
	      <if test="entity.startDate != null" >
	        start_date = #{entity.startDate},
	      </if>
	      <if test="entity.endDate != null" >
	        end_date = #{entity.endDate},
	      </if>
	        update_time = now(),
	      <if test="entity.activePrice != null" >
	        active_price = #{entity.activePrice},
	      </if>
	      <if test="entity.activeDetail != null" >
	        active_detail = #{entity.activeDetail},
	      </if>
	    </set>
        WHERE
          id = #{entity.id}
    </update>
    <select id="find" resultType="hashmap">
        SELECT
           <include refid="Base_Column_List" />
        FROM
          tb_buildings
        WHERE
          id>0
        <if test="filter.username != null and filter.username != ''">
            <bind name="filter.username" value=" '%' + filter.username + '%' " />
            AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
            <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
            AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
            AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
            <bind name="filter.email" value=" '%' + filter.email + '%' " />
            AND email LIKE #{filter.email}
        </if>
        ORDER BY id DESC
        <if test="filter.first != null and filter.last != null">
            LIMIT #{filter.first},#{filter.last}
        </if>
    </select>
</mapper>