<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vfh.httpInterface.dao.buildings.BuildingsMapper" >
  <sql id="Base_Column_List" >
    id, city_id, area_id, map_x, map_y, developer_company_id, bulidings_name, query_keyword, 
    create_time, update_time, status, open_date, deliver_date, server_phone_num, address
  </sql>
  <select id="get" resultType="hashmap">
        SELECT 
          <include refid="Base_Column_List" />
        FROM
          tb_buildings
        WHERE 
          id = #{id}
   </select>
  
  <delete id="delete" >
    delete from tb_buildings
    where id = #{id}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="entity.id" >
    insert into tb_buildings ( city_id, area_id, 
      map_x, map_y, 
      bulidings_name, query_keyword, create_time, 
      status, open_date, 
      deliver_date, server_phone_num, address
      )
    values ( #{entity.cityId}, #{entity.areaId}, 
      #{entity.mapX}, #{entity.mapY}, 
      #{entity.buildingsName}, #{entity.queryKeyword}, now(), 
       #{entity.status}, #{entity.openDate}, 
      #{entity.deliverDate}, #{entity.serverPhoneNum}, #{entity.address}
      )
  </insert>
  <select id="count" resultType="long">
    select count(*) from tb_buildings
     WHERE
          id>0
        <if test="filter.username != null and filter.username != ''">
          <bind name="filter.username" value=" '%' + filter.username + '%' " />
          AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
          <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
          AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
          AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
          <bind name="filter.email" value=" '%' + filter.email + '%' " />
          AND email LIKE #{filter.email}
        </if>
  </select>
  <update id="update">
        UPDATE
          tb_buildings
        <set>
	      <if test="record.cityId != null" >
	        city_id = #{entity.cityId},
	      </if>
	      <if test="record.areaId != null" >
	        area_id = #{entity.areaId},
	      </if>
	      <if test="record.mapX != null" >
	        map_x = #{entity.mapX},
	      </if>
	      <if test="record.mapY != null" >
	        map_y = #{entity.mapY},
	      </if>
	      <if test="record.developerCompanyId != null" >
	        developer_company_id = #{entity.developerCompanyId},
	      </if>
	      <if test="record.bulidingsName != null" >
	        bulidings_name = #{entity.bulidingsName},
	      </if>
	      <if test="record.queryKeyword != null" >
	        query_keyword = #{entity.queryKeyword},
	      </if>
	      <if test="record.createTime != null" >
	        create_time = #{entity.createTime},
	      </if>
	      <if test="record.updateTime != null" >
	        update_time = #{entity.updateTime},
	      </if>
	      <if test="record.status != null" >
	        status = #{entity.status},
	      </if>
	      <if test="record.openDate != null" >
	        open_date = #{entity.openDate},
	      </if>
	      <if test="record.deliverDate != null" >
	        deliver_date = #{entity.deliverDate},
	      </if>
	      <if test="record.serverPhoneNum != null" >
	        server_phone_num = #{entity.serverPhoneNum},
	      </if>
	      <if test="record.address != null" >
	        address = #{entity.address},
	      </if>
	    </set>
        WHERE
          id = #{entity.id}
    </update>
  <select id="find" resultType="hashmap">
        SELECT
           <include refid="Base_Column_List" />
        FROM
          tb_buildings
        WHERE
          id>0
        <if test="filter.username != null and filter.username != ''">
            <bind name="filter.username" value=" '%' + filter.username + '%' " />
            AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
            <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
            AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
            AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
            <bind name="filter.email" value=" '%' + filter.email + '%' " />
            AND email LIKE #{filter.email}
        </if>
        ORDER BY id DESC
        <if test="filter.first != null and filter.last != null">
            LIMIT #{filter.first},#{filter.last}
        </if>
    </select>
</mapper>