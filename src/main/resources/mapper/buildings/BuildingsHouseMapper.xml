<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="vfh.httpInterface.dao.buildings.BuildingsHouseMapper" >
  <sql id="Base_Column_List" >
    id, 
    house_type_name, 
    acreage, 
    building_id, 
    ting, 
    shi, 
    chu, 
    wei,
    yang,
    create_time,
    update_time
  </sql>
    <select id="get" resultType="hashmap">  
        SELECT 
              id, 
    house_type_name, 
    acreage, 
    building_id, 
    ting, 
    shi, 
    chu, 
    wei,
    yang,
    create_time,
    update_time     
        FROM
          tb_building_house_type
        WHERE 
          id = #{id}
   </select>
   <delete id="delete" >
    delete from tb_building_house_type
    where id = #{id}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="entity.id" >
    insert into tb_building_house_type ( 
    house_type_name, 
    acreage, 
    building_id,  
    ting, 
    shi, 
    chu, 
    wei,
    yang,
    create_time,
    update_time
    )
    values ( #{entity.house_type_name}, #{entity.acreage}, 
      #{entity.building_id}, 
      #{entity.ting}, #{entity.shi}, #{entity.chu},#{entity.wei},#{entity.yang},now(),now()
      )
  </insert>
 <select id="count" resultType="long">
    select count(*) from tb_building_house_type 
     WHERE
          building_id = #{filter.buildingsId}
        <if test="filter.username != null and filter.username != ''">
          <bind name="filter.username" value=" '%' + filter.username + '%' " />
          AND username LIKE #{filter.username}
        </if>

        <if test="filter.nickname != null and filter.nickname != ''">
          <bind name="filter.nickname" value=" '%' + filter.nickname + '%' " />
          AND nickname LIKE #{filter.nickname}
        </if>

        <if test="filter.state != null and filter.state != ''">
          AND state = #{filter.state}
        </if>

        <if test="filter.email != null and filter.email != ''">
          <bind name="filter.email" value=" '%' + filter.email + '%' " />
          AND email LIKE #{filter.email}
        </if>
      
  </select>
        
 
  <update id="update">
        update tb_building_house_type
	    <set >
	      <if test="entity.house_type_name != null" >
	        house_type_name = #{entity.house_type_name},
	      </if>
	      <if test="entity.acreage != null" >
	        acreage = #{entity.acreage},
	      </if>
	      <if test="entity.ting != null" >
	        ting = #{entity.ting},
	      </if>
	      <if test="entity.shi != null" >
	        shi = #{entity.shi},
	      </if>
	      <if test="entity.chu != null" >
	        chu = #{entity.chu},
	      </if>
	      <if test="entity.wei != null" >
	        wei = #{entity.wei},
	      </if>
	      <if test="entity.yang != null" >
	        yang = #{entity.yang},
	      </if>
	        update_time = now(),
	    </set>
        WHERE
          id = #{entity.id}
    </update>
    <select id="find" resultType="hashmap">
        SELECT
    *
        FROM
          tb_building_house_type 
        WHERE
          id>0
        <if test="filter.buildingsId != null and filter.buildingsId != ''">
            AND a.building_id = #{filter.buildingsId}
        </if>

        ORDER BY shi

    </select>
        <select id="findBybuildId" resultType="hashmap">  
        SELECT 
          <include refid="Base_Column_List" />     
        FROM
          tb_building_house_type
        WHERE 
          building_id = #{filter.buildingsId}
          
         order by shi
   </select>
</mapper>